name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get Client version from package.json
        run: echo "CLIENT_PACKAGE_VERSION=$(node -p "require('./client/package.json').version")" >> $GITHUB_ENV

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Build Docker Client Image
        run: docker build --file=client/Dockerfile -t rontor-client:latest -t rontor-clinet:${{ env.CLIENT_PACKAGE_VERSION }} .

      - name: Setup key
        run: |
          set -eu
          mkdir "$HOME/.ssh"
          echo "${{ secrets.STAGE_ID_RSA }}" > "$HOME/.ssh/key"
          chmod 600 "$HOME/.ssh/key"

      - name: Deploy Docker Container
        run: |
          docker save rontor-client | ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no ${{ secrets.STAGE_SERVER_USER }}@${{ secrets.STAGE_SERVER_IP }} -p ${{ secrets.STAGE_SERVER_PORT }} 'docker load'

  server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get Server version from package.json
        run: echo "SERVER_PACKAGE_VERSION=$(node -p "require('./server/package.json').version")" >> $GITHUB_ENV

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Build Docker Server Image
        run: docker build --file=server/Dockerfile -t rontor-server:latest -t rontor-server:${{ env.SERVER_PACKAGE_VERSION }} .

      - name: Setup key
        run: |
          set -eu
          mkdir "$HOME/.ssh"
          echo "${{ secrets.STAGE_ID_RSA }}" > "$HOME/.ssh/key"
          chmod 600 "$HOME/.ssh/key"

      - name: Deploy Docker Container
        run: |
          docker save rontor-server | ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no ${{ secrets.STAGE_SERVER_USER }}@${{ secrets.STAGE_SERVER_IP }} -p ${{ secrets.STAGE_SERVER_PORT }} 'docker load'